pool:
  vmImage: 'windows-latest'

trigger:
  branches:
    include:
      - dev
  paths:
    exclude:
    - README.md

steps:
- powershell: |
    cd ..
    git clone -b 3.0.2 https://github.com/SteeltoeOSS/Steeltoe.git
    git clone -b 2.5.2 https://github.com/SteeltoeOSS/Steeltoe.git Steeltoe2x
  displayName: "Clone Steeltoe 3.x & 2.x"

- powershell: choco install docfx --version=2.56.7
  displayName: "Install Docfx"

- powershell: |
    docfx metadata api-v2.json
    docfx metadata api-v3.json
    docfx metadata api-all.json
  displayName: "Extract Metadata"

- powershell: |
    docfx build -o ./publish --globalMetadataFiles "dev.json"
    if ($lastexitcode -ne 0){
      throw ("Error generating documentation")
    }
  displayName: "Publish Site"

- task: CopyFiles@2
  inputs:
    SourceFolder: './publish/_site'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/_site'
    CleanTargetFolder: true
  condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
  displayName: "Stage Site"

- powershell: cp "Dockerfile" "$(Build.ArtifactStagingDirectory)/Dockerfile"
  condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
  displayName: "Stage Dockerfile"

- task: CopyFiles@2
  inputs:
    SourceFolder: './deploy/kubernetes'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/kubernetes'
    CleanTargetFolder: true
  condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
  displayName: "Stage Kubernetes Manifest"

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition:
          and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
  displayName: "Upload Staging Artifacts"
