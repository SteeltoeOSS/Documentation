trigger:
  branches:
    include:
      - dev
  paths:
    exclude:
    - README.md

stages:
  - stage: assemble
    displayName: Assemble
    jobs:
      - job: build
        displayName: Build
        pool:
          vmImage: windows-latest
        steps:
          - powershell: |
              cd ..
              git clone -b 3.0.2 https://github.com/SteeltoeOSS/Steeltoe.git
              git clone -b 2.5.3 https://github.com/SteeltoeOSS/Steeltoe.git Steeltoe2x
            displayName: Clone Steeltoe 3.x, 2.x
          - powershell: choco install docfx --version=2.56.7
            displayName: Install Docfx
          - powershell: |
              docfx metadata api-v2.json
              docfx metadata api-v3.json
              docfx metadata api-all.json
            displayName: Extract Metadata
          - powershell: |
              docfx build -o ./publish --globalMetadataFiles "dev.json"
              if ($lastexitcode -ne 0){
                throw ("Error generating documentation")
              }
            displayName: "Publish Site"
          - publish: './publish'
            displayName: 'Publish Site'
            artifact: site
  - stage: deploy
    displayName: Deploy
    dependsOn: assemble
    condition:
      not(eq(variables['build.reason'], 'PullRequest'))
    jobs:
      - job: deployToStaging
        displayName: Deploy to Staging
        pool:
          vmImage: windows-latest
        steps:
          - download: current
            artifact: site
          - task: CopyFiles@2
            displayName: Stage Site
            inputs:
              SourceFolder: '$(Pipeline.Workspace)/site'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/_site'
              CleanTargetFolder: true
          - powershell: cp "Dockerfile" "$(Build.ArtifactStagingDirectory)/Dockerfile"
            displayName: Stage Dockerfile
          - task: CopyFiles@2
            displayName: Stage Kubernetes Manifest
            inputs:
              SourceFolder: './deploy/kubernetes'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/kubernetes'
              CleanTargetFolder: true
          - task: PublishBuildArtifacts@1
            displayName: Upload Staging Artifacts
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
