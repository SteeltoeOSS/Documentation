{
  "type": "object",
  "properties": {
    "Certificates": {
      "type": "object",
      "properties": {
        "AppInstanceIdentity": {
          "type": "object",
          "properties": {
            "CertificateFilePath": {
              "type": "string",
              "description": "Gets or sets the local path to a certificate file on disk. Use 'Steeltoe.Common.Certificates.CertificateSettings.PrivateKeyFilePath' if the private key is stored in another file."
            },
            "PrivateKeyFilePath": {
              "type": "string",
              "description": "Gets or sets the local path to a private key file on disk (optional)."
            }
          },
          "description": "Configuration settings for certificate access. Indicates where to load a 'System.Security.Cryptography.X509Certificates.X509Certificate2' from."
        },
        "CertificateFilePath": {
          "type": "string",
          "description": "Gets or sets the local path to a certificate file on disk. Use 'Steeltoe.Common.Certificates.CertificateSettings.PrivateKeyFilePath' if the private key is stored in another file."
        },
        "ConfigServer": {
          "type": "object",
          "properties": {
            "CertificateFilePath": {
              "type": "string",
              "description": "Gets or sets the local path to a certificate file on disk. Use 'Steeltoe.Common.Certificates.CertificateSettings.PrivateKeyFilePath' if the private key is stored in another file."
            },
            "PrivateKeyFilePath": {
              "type": "string",
              "description": "Gets or sets the local path to a private key file on disk (optional)."
            }
          },
          "description": "Configuration settings for certificate access. Indicates where to load a 'System.Security.Cryptography.X509Certificates.X509Certificate2' from."
        },
        "Eureka": {
          "type": "object",
          "properties": {
            "CertificateFilePath": {
              "type": "string",
              "description": "Gets or sets the local path to a certificate file on disk. Use 'Steeltoe.Common.Certificates.CertificateSettings.PrivateKeyFilePath' if the private key is stored in another file."
            },
            "PrivateKeyFilePath": {
              "type": "string",
              "description": "Gets or sets the local path to a private key file on disk (optional)."
            }
          },
          "description": "Configuration settings for certificate access. Indicates where to load a 'System.Security.Cryptography.X509Certificates.X509Certificate2' from."
        },
        "PrivateKeyFilePath": {
          "type": "string",
          "description": "Gets or sets the local path to a private key file on disk (optional)."
        }
      },
      "description": "Configuration settings for certificate access. Indicates where to load a 'System.Security.Cryptography.X509Certificates.X509Certificate2' from."
    },
    "Consul": {
      "type": "object",
      "properties": {
        "Datacenter": {
          "type": "string",
          "description": "Gets or sets the datacenter name passed in each request to the server."
        },
        "Discovery": {
          "type": "object",
          "properties": {
            "DefaultQueryTag": {
              "type": "string",
              "description": "Gets or sets the tag to filter on when querying for service instances."
            },
            "DefaultZoneMetadataName": {
              "type": "string",
              "description": "Gets or sets the metadata key name for 'Steeltoe.Discovery.Consul.Configuration.ConsulDiscoveryOptions.InstanceZone'."
            },
            "Deregister": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to de-register the running app on shutdown. Default value: true."
            },
            "Enabled": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to enable the Consul client. Default value: true."
            },
            "FailFast": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to throw an exception (instead of logging an error) if registration fails. Default value: true."
            },
            "HealthCheckCriticalTimeout": {
              "type": "string",
              "description": "Gets or sets the duration after which Consul deregisters the running app when in state critical. Default value: 30m."
            },
            "HealthCheckInterval": {
              "type": "string",
              "description": "Gets or sets how often Consul should perform an HTTP health check. Default value: 10s."
            },
            "HealthCheckPath": {
              "type": "string",
              "description": "Gets or sets the relative URL to the health endpoint of the running app. Default value: /actuator/health."
            },
            "HealthCheckTimeout": {
              "type": "string",
              "description": "Gets or sets the timeout Consul should use for an HTTP health check. Default value: 10s."
            },
            "HealthCheckTlsSkipVerify": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether Consul should skip TLS verification for HTTP health checks. Default value: false."
            },
            "HealthCheckUrl": {
              "type": "string",
              "description": "Gets or sets the absolute URL to the health endpoint of the running app (overrides 'Steeltoe.Discovery.Consul.Configuration.ConsulDiscoveryOptions.HealthCheckPath')."
            },
            "Heartbeat": {
              "type": "object",
              "properties": {
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the running app periodically sends TTL (time-to-live) heartbeats. Default value: true."
                },
                "IntervalRatio": {
                  "type": [
                    "number",
                    "string"
                  ],
                  "description": "Gets or sets the rate at which the running app sends TTL heartbeats, relative to 'Steeltoe.Discovery.Consul.Configuration.ConsulHeartbeatOptions.TtlValue' and 'Steeltoe.Discovery.Consul.Configuration.ConsulHeartbeatOptions.TtlUnit'. Default value: 0.66."
                },
                "TtlUnit": {
                  "type": "string",
                  "description": "Gets or sets the unit for 'Steeltoe.Discovery.Consul.Configuration.ConsulHeartbeatOptions.TtlValue' (\"ms\", \"s\", \"m\" or \"h\"). Default value: s."
                },
                "TtlValue": {
                  "type": "integer",
                  "description": "Gets or sets how often a TTL heartbeat must be sent to be considered healthy. Default value: 30."
                }
              },
              "description": "Gets or sets settings related to heartbeats."
            },
            "HostName": {
              "type": "string",
              "description": "Gets or sets the hostname to register the running app with (if 'Steeltoe.Discovery.Consul.Configuration.ConsulDiscoveryOptions.PreferIPAddress' is false)."
            },
            "IPAddress": {
              "type": "string",
              "description": "Gets or sets the IP address to register the running app with (if 'Steeltoe.Discovery.Consul.Configuration.ConsulDiscoveryOptions.PreferIPAddress' is true)."
            },
            "InstanceGroup": {
              "type": "string",
              "description": "Gets or sets the metadata \"group\" value to use when registering the running app."
            },
            "InstanceId": {
              "type": "string",
              "description": "Gets or sets the unique ID to register the running app under."
            },
            "InstanceZone": {
              "type": "string",
              "description": "Gets or sets the metadata zone value to use when registering the running app."
            },
            "Metadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Gets metadata key/value pairs used when registering the running app."
            },
            "Port": {
              "type": "integer",
              "description": "Gets or sets the port number to register the running app with."
            },
            "PreferIPAddress": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to register the running app with IP address instead of hostname. Default: false."
            },
            "QueryPassing": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to filter on health status 'passing' when querying for service instances. Default value: true."
            },
            "Register": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to register the running app as a service instance. Default value: true."
            },
            "RegisterHealthCheck": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to enable periodic health checking for the running app. Default value: true."
            },
            "Retry": {
              "type": "object",
              "properties": {
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to try again When registering the running app fails. Default value: false."
                },
                "InitialInterval": {
                  "type": "integer",
                  "description": "Gets or sets the time to wait (in milliseconds) after the first registration failure. Default value: 1000."
                },
                "MaxAttempts": {
                  "type": "integer",
                  "description": "Gets or sets the maximum number of registration attempts (if retries are enabled). Default value: 6."
                },
                "MaxInterval": {
                  "type": "integer",
                  "description": "Gets or sets the upper bound (in milliseconds) for intervals. Default value: 2000."
                },
                "Multiplier": {
                  "type": [
                    "number",
                    "string"
                  ],
                  "description": "Gets or sets the factor to increment the next interval with. Default value: 1.1."
                }
              },
              "description": "Gets settings related to retrying requests."
            },
            "Scheme": {
              "type": "string",
              "description": "Gets or sets the scheme to register the running app with (\"http\" or \"https\"). Default value: http."
            },
            "ServiceName": {
              "type": "string",
              "description": "Gets or sets the friendly name to register the running app with."
            },
            "Tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Gets the tags used when registering the running app."
            },
            "UseAspNetCoreUrls": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to register with the port number ASP.NET Core is listening on. Default value: true."
            },
            "UseNetworkInterfaces": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether 'System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces' is used to determine 'Steeltoe.Discovery.Consul.Configuration.ConsulDiscoveryOptions.IPAddress' and 'Steeltoe.Discovery.Consul.Configuration.ConsulDiscoveryOptions.HostName'. Default value: false."
            }
          },
          "description": "Configuration options for 'Steeltoe.Discovery.Consul.ConsulDiscoveryClient'."
        },
        "Host": {
          "type": "string",
          "description": "Gets or sets the hostname or IP address of the Consul server. Default value: localhost."
        },
        "Password": {
          "type": "string",
          "description": "Gets or sets password for HTTP authentication."
        },
        "Port": {
          "type": "integer",
          "description": "Gets or sets the port number the Consul server is listening on. Default value: 8500."
        },
        "Scheme": {
          "type": "string",
          "description": "Gets or sets the scheme to connect with the Consul server (\"http\" or \"https\"). Default value: http."
        },
        "Token": {
          "type": "string",
          "description": "Gets or sets the authentication token passed in each request to the server."
        },
        "Username": {
          "type": "string",
          "description": "Gets or sets the username for HTTP authentication."
        },
        "WaitTime": {
          "type": "string",
          "description": "Gets or sets the maximum duration for a blocking request."
        }
      },
      "description": "Configuration options to use in creating a Consul client. See the documentation of the Consul client for more details."
    },
    "Discovery": {
      "type": "object",
      "properties": {
        "Services": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "Host": {
                "type": "string",
                "description": "Gets the hostname of the registered service instance."
              },
              "IsSecure": {
                "type": "boolean",
                "description": "Gets a value indicating whether the scheme of the registered service instance is https."
              },
              "Metadata": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Gets the key/value metadata associated with this service instance."
              },
              "Port": {
                "type": "integer",
                "description": "Gets the port of the registered service instance."
              },
              "ServiceId": {
                "type": "string",
                "description": "Gets the service ID as registered by the discovery client."
              }
            },
            "description": "Represents an 'Steeltoe.Common.Discovery.IServiceInstance' inside 'Steeltoe.Discovery.Configuration.ConfigurationDiscoveryOptions' that was loaded from app configuration."
          },
          "description": "Gets the list of service instances."
        }
      },
      "description": "Provides access to 'Steeltoe.Common.Discovery.IServiceInstance's stored in app configuration. Used by 'Steeltoe.Discovery.Configuration.ConfigurationDiscoveryClient'."
    },
    "Encrypt": {
      "type": "object",
      "properties": {
        "Enabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether decryption is enabled. Default value: false."
        },
        "Key": {
          "type": "string",
          "description": "Gets or sets the symmetric cryptographic key."
        },
        "KeyStore": {
          "type": "object",
          "properties": {
            "Alias": {
              "type": "string",
              "description": "Gets or sets the alias of the key in the keystore."
            },
            "Location": {
              "type": "string",
              "description": "Gets or sets the location of the keystore file."
            },
            "Password": {
              "type": "string",
              "description": "Gets or sets the password that locks the keystore."
            }
          },
          "description": "Gets the settings related to the key store."
        },
        "RSA": {
          "type": "object",
          "properties": {
            "Algorithm": {
              "type": "string",
              "description": "Gets or sets the RSA algorithm (DEFAULT or OAEP). Default value: DEFAULT."
            },
            "Salt": {
              "type": "string",
              "description": "Gets or sets the salt for the random secret. Default value: deadbeef."
            },
            "Strong": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether the \"strong\" GCM AES algorithm is used. Otherwise, the standard CBC algorithm is used. Default value: false."
            }
          },
          "description": "Gets the settings related to RSA cryptography."
        }
      },
      "description": "Holds settings used to configure decryption for the Spring Cloud Config Server provider."
    },
    "Eureka": {
      "type": "object",
      "properties": {
        "Client": {
          "type": "object",
          "properties": {
            "AccessTokenUri": {
              "type": "string",
              "description": "Gets or sets the URL to obtain OAuth2 access token from, before connecting to the Eureka server."
            },
            "ClientId": {
              "type": "string",
              "description": "Gets or sets the client ID for obtaining access token."
            },
            "ClientSecret": {
              "type": "string",
              "description": "Gets or sets the secret for obtaining access token."
            },
            "Enabled": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to enable the Eureka client. Default value: true."
            },
            "EurekaServer": {
              "type": "object",
              "properties": {
                "ConnectTimeoutSeconds": {
                  "type": "integer",
                  "description": "Gets or sets how long to wait (in seconds) before a connection to the Eureka server times out. Note that the connections in the client are pooled and this setting affects the actual connection creation and also the wait time to get the connection from the pool. Default value: 5."
                },
                "ProxyHost": {
                  "type": "string",
                  "description": "Gets or sets the proxy hostname used in contacting the Eureka server."
                },
                "ProxyPassword": {
                  "type": "string",
                  "description": "Gets or sets the proxy password used in contacting the Eureka server."
                },
                "ProxyPort": {
                  "type": "integer",
                  "description": "Gets or sets the proxy port number used in contacting the Eureka server."
                },
                "ProxyUserName": {
                  "type": "string",
                  "description": "Gets or sets the proxy username used in contacting the Eureka server."
                },
                "RetryCount": {
                  "type": "integer",
                  "description": "Gets or sets the number of times to retry Eureka server requests. Default value: 2."
                },
                "ShouldGZipContent": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to auto-decompress responses from Eureka server. The registry information from the Eureka server is compressed for optimum network traffic. Default value: true."
                }
              },
              "description": "Gets Eureka server settings."
            },
            "Health": {
              "type": "object",
              "properties": {
                "CheckEnabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to query ASP.NET Core health checks and 'Steeltoe.Common.HealthChecks.IHealthContributor's during registration and renewals, in order to determine the status of the running app to report back to Eureka. Default value: true."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to activate an 'Steeltoe.Common.HealthChecks.IHealthContributor' that verifies connectivity to the Eureka server. Default value: true."
                },
                "MonitoredApps": {
                  "type": "string",
                  "description": "Gets or sets a comma-delimited list of applications in Eureka this app depends on. Leave empty for all apps. Their status is taken into account by 'Steeltoe.Discovery.Eureka.EurekaApplicationsHealthContributor', which requires manual addition to the IoC container."
                }
              },
              "description": "Gets Eureka health settings."
            },
            "RegistryFetchIntervalSeconds": {
              "type": "integer",
              "description": "Gets or sets how often (in seconds) to fetch registry information from the Eureka server. Default value: 30."
            },
            "RegistryRefreshSingleVipAddress": {
              "type": "string",
              "description": "Gets or sets whether to only fetch registry information for the specified VIP address. Default value: false."
            },
            "ServiceUrl": {
              "type": "string",
              "description": "Gets or sets a comma-delimited list of Eureka server endpoints. Default value: http://localhost:8761/eureka/."
            },
            "ShouldDisableDelta": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to fetch the full registry each time or fetch only deltas. Note that the delta fetches can reduce the traffic tremendously, because the rate of change in the Eureka server is normally much lower than the rate of fetches. Default value: false."
            },
            "ShouldFetchRegistry": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to periodically fetch registry information from the Eureka server. Default value: true."
            },
            "ShouldFilterOnlyUpInstances": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to include only instances with UP status after fetching the list of applications. Default value: true."
            },
            "ShouldRegisterWithEureka": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to register the running app as a service instance. Default value: true."
            },
            "Validate_Certificates": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether the client validates server certificates. Default value: true."
            }
          }
        },
        "Instance": {
          "type": "object",
          "properties": {
            "AppGroup": {
              "type": "string",
              "description": "Gets or sets the name of the application group to be registered with Eureka."
            },
            "AppName": {
              "type": "string",
              "description": "Gets or sets the name of the application to be registered with Eureka."
            },
            "AsgName": {
              "type": "string",
              "description": "Gets or sets the AWS auto-scaling group name associated with the instance. This information is specifically used in an AWS environment to automatically put an instance out of service after the instance is launched, and it has been disabled for traffic."
            },
            "DataCenterInfo": {
              "type": "object",
              "properties": {
                "Name": {
                  "enum": [
                    "Netflix",
                    "Amazon",
                    "MyOwn"
                  ]
                }
              },
              "description": "Gets the data center the instance is deployed to. This information is used to get some AWS-specific instance information if the instance is deployed in AWS."
            },
            "HealthCheckUrl": {
              "type": "string",
              "description": "Gets or sets the absolute URL for health checks of the instance. Users can provide the 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.HealthCheckUrlPath' if the health check endpoint resides in the same instance talking to Eureka. Otherwise, in case the instance is a proxy for some other server, users can provide the full URL. If the full URL is provided, it takes precedence. It is normally used for making educated decisions based on the health of the instance. For example, it can be used to determine whether to proceed deployments to an entire farm or stop the deployments without causing further damage. The full URL should follow the format: http://${eureka.hostname}:7001/ where the value ${eureka.hostname} is replaced at runtime."
            },
            "HealthCheckUrlPath": {
              "type": "string",
              "description": "Gets or sets the relative path to the health check endpoint of the instance. The health check URL is then constructed out of the 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.HostName' and the type of communication - secure or non-secure, as specified in 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.SecurePort' and 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.NonSecurePort'. It is normally used for making educated decisions based on the health of the instance. For example, it can be used to determine whether to proceed deployments to an entire farm or stop the deployments without causing further damage. Default value: /health."
            },
            "HomePageUrl": {
              "type": "string",
              "description": "Gets or sets the absolute URL to the home page for the instance. Users can provide the 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.HomePageUrlPath' if the home page resides in the same instance talking to Eureka. Otherwise, in case the instance is a proxy for some other server, users can provide the full URL. If the full URL is provided, it takes precedence. It is normally used for informational purposes for other services to find out about the status of the instance. Users can provide a simple HTML page indicating what the current status of the instance is. The full URL should follow the format: http://${eureka.hostname}:7001/ where the value ${eureka.hostname} is replaced at runtime."
            },
            "HomePageUrlPath": {
              "type": "string",
              "description": "Gets or sets the relative path to the home page URL for the instance. The home page URL is then constructed out of the 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.HostName' and the type of communication - secure or non-secure, as specified in 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.SecurePort' and 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.NonSecurePort'. It is normally used for informational purposes for other services to use it as a landing page. Default value: /."
            },
            "HostName": {
              "type": "string",
              "description": "Gets or sets the hostname on which the instance is registered."
            },
            "IPAddress": {
              "type": "string",
              "description": "Gets or sets the IP address on which the instance is registered."
            },
            "InstanceEnabledOnInit": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether the instance should take traffic as soon as it is registered. Default value: true."
            },
            "InstanceId": {
              "type": "string",
              "description": "Gets or sets the unique ID (within the scope of the app name) of the instance to be registered with Eureka."
            },
            "LeaseExpirationDurationInSeconds": {
              "type": "integer",
              "description": "Gets or sets the time (in seconds) that the Eureka server waits since it received the last heartbeat before it marks the instance as down and thereby disallowing traffic to the instance. Setting this value too high could mean that traffic is routed to the instance even when the instance is not alive anymore. Setting this value too low could mean the instance may be taken out of traffic because of temporary network glitches. This value must be higher than 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.LeaseRenewalIntervalInSeconds'. Default value: 90."
            },
            "LeaseRenewalIntervalInSeconds": {
              "type": "integer",
              "description": "Gets or sets how often (in seconds) the client sends heartbeats to Eureka to indicate that it is still alive. If the heartbeats are not received for the period specified in 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.LeaseExpirationDurationInSeconds', Eureka server will remove the instance from its view, thereby disallowing traffic to the instance. Note that the instance could still not take traffic if 'Steeltoe.Discovery.Eureka.Configuration.EurekaHealthOptions.CheckEnabled' is true, which decides to make itself unavailable. Default value: 30."
            },
            "MetadataMap": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Gets the name/value pairs associated with the instance. This information is sent to Eureka server and can be used by other instances."
            },
            "NonSecurePortEnabled": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether the non-secure port should be enabled."
            },
            "Port": {
              "type": "integer",
              "description": "Gets or sets the non-secure port number on which the instance should receive traffic."
            },
            "PreferIPAddress": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether to register with 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.IPAddress' instead of 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.HostName'. Default value: false."
            },
            "RegistrationMethod": {
              "type": "string",
              "description": "Gets or sets how to register on Cloud Foundry. Can be \"route\", \"direct\", or \"hostname\"."
            },
            "SecureHealthCheckUrl": {
              "type": "string",
              "description": "Gets or sets the secure absolute URL for health checks of the instance. Users can provide the 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.HealthCheckUrlPath' if the health check endpoint resides in the same instance talking to Eureka. Otherwise, in case the instance is a proxy for some other server, users can provide the full URL. If the full URL is provided, it takes precedence. It is normally used for making educated decisions based on the health of the instance. For example, it can be used to determine whether to proceed deployments to an entire farm or stop the deployments without causing further damage. The full URL should follow the format: https://${eureka.hostname}:7001/ where the value ${eureka.hostname} is replaced at runtime."
            },
            "SecurePort": {
              "type": "integer",
              "description": "Gets or sets the secure port on which the instance should receive traffic."
            },
            "SecurePortEnabled": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether the secure port should be enabled."
            },
            "SecureVipAddress": {
              "type": "string",
              "description": "Gets or sets the comma-delimited list of secure VIP (Virtual Internet Protocol) addresses for the instance."
            },
            "StatusPageUrl": {
              "type": "string",
              "description": "Gets or sets the absolute URL to the status page for the instance. Users can provide the 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.StatusPageUrlPath' if the status page resides in the same instance talking to Eureka. Otherwise, in case the instance is a proxy for some other server, users can provide the full URL. If the full URL is provided, it takes precedence. It is normally used for informational purposes for other services to find out about the status of the instance. Users can provide a simple HTML page indicating what the current status of the instance is. The full URL should follow the format: http://${eureka.hostname}:7001/ where the value ${eureka.hostname} is replaced at runtime."
            },
            "StatusPageUrlPath": {
              "type": "string",
              "description": "Gets or sets the relative path to the status page for the instance. The status page URL is then constructed out of the 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.HostName' and the type of communication - secure or non-secure, as specified in 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.SecurePort' and 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.NonSecurePort'. It is normally used for informational purposes for other services to find out about the status of the instance. Users can provide a simple HTML page indicating what the current status of the instance is. Default value: /info."
            },
            "UseNetworkInterfaces": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether 'System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces' is used to determine 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.IPAddress' and 'Steeltoe.Discovery.Eureka.Configuration.EurekaInstanceOptions.HostName' ."
            },
            "VipAddress": {
              "type": "string",
              "description": "Gets or sets the comma-delimited list of VIP (Virtual Internet Protocol) addresses for the instance."
            }
          }
        }
      }
    },
    "Management": {
      "type": "object",
      "properties": {
        "CloudFoundry": {
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean"
            }
          }
        },
        "Endpoints": {
          "type": "object",
          "properties": {
            "Actuator": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Exposure": {
                  "type": "object",
                  "properties": {
                    "Exclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Gets the IDs of the actuators to exclude. Takes precedence over included entries."
                    },
                    "Include": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Gets the IDs of the actuators to include. Excluded entries take precedence."
                    }
                  },
                  "description": "Indicates which actuators are exposed."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "CloudFoundry": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "ApplicationId": {
                  "type": "string",
                  "description": "Gets or sets the GUID identifying the app, used in permission checks."
                },
                "CloudFoundryApi": {
                  "type": "string",
                  "description": "Gets or sets the location of the Cloud Controller API for the Cloud Foundry deployment where the app runs."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                },
                "ValidateCertificates": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to validate certificates. Default value: true."
                }
              }
            },
            "CustomJsonConverters": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Gets a list of assembly-qualified custom JSON converters."
            },
            "DbMigrations": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "Enabled": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether management endpoints are enabled. Default value: true."
            },
            "Env": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "KeysToSanitize": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of keys to sanitize. A key can be a simple string that the property must end with, or a regular expression. A case-insensitive match is always performed. Use a single-element empty string to disable sanitization. Default value: [ \"password\", \"secret\", \"key\", \"token\", \".*credentials.*\", \"vcap_services\" ]"
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "Health": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Claim": {
                  "type": "object",
                  "properties": {
                    "Type": {
                      "type": "string"
                    },
                    "Value": {
                      "type": "string"
                    }
                  },
                  "description": "Gets or sets the claim requirements for retrieving components and/or details."
                },
                "DiskSpace": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether to enable the disk space contributor. Default value: true."
                    },
                    "Path": {
                      "type": "string",
                      "description": "Gets or sets the path to check for available disk space. Default value: \".\"."
                    },
                    "Threshold": {
                      "type": "integer",
                      "description": "Gets or sets the disk space, in bytes, that is considered low. Default value: 10 MB."
                    }
                  }
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Groups": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "Include": {
                        "type": "string",
                        "description": "Gets or sets a comma-separated list of health contributor IDs and/or health check registration names to include in this group."
                      },
                      "ShowComponents": {
                        "enum": [
                          "Never",
                          "WhenAuthorized",
                          "Always"
                        ],
                        "description": "Gets or sets when to show components in this group, overriding the endpoint-level setting."
                      },
                      "ShowDetails": {
                        "enum": [
                          "Never",
                          "WhenAuthorized",
                          "Always"
                        ],
                        "description": "Gets or sets when to show details of components in this group, overriding the endpoint-level setting."
                      }
                    }
                  },
                  "description": "Gets the configured health groups."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Liveness": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether to enable the liveness contributor. Default value: false."
                    }
                  }
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "Ping": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether to enable the ping contributor. Default value: true."
                    }
                  }
                },
                "Readiness": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether to enable the readiness contributor. Default value: false."
                    }
                  }
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                },
                "Role": {
                  "type": "string",
                  "description": "Gets or sets the role required to retrieve components and/or details."
                },
                "ShowComponents": {
                  "enum": [
                    "Never",
                    "WhenAuthorized",
                    "Always"
                  ],
                  "description": "Gets or sets when to show components in responses."
                },
                "ShowDetails": {
                  "enum": [
                    "Never",
                    "WhenAuthorized",
                    "Always"
                  ],
                  "description": "Gets or sets when to show details of components in responses."
                }
              }
            },
            "HeapDump": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "HeapDumpType": {
                  "type": "string",
                  "description": "Gets or sets the type of dump to create. Possible values: GcDump, Normal, WithHeap, Triage, Full. Default value: Full."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "HttpExchanges": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Capacity": {
                  "type": "integer",
                  "description": "Gets or sets a value indicating how many HTTP exchanges should be stored. Default value: 100."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "IncludePathInfo": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the path from the HTTP request URL should be returned. Default value: true."
                },
                "IncludeQueryString": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the query string parameters from the request URL should be returned. Default value: true."
                },
                "IncludeRemoteAddress": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the IP address of the request's sender should be returned. Default value: false."
                },
                "IncludeRequestHeaders": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether headers from the HTTP request should be returned. Default value: true.\n\nIf a request header is not present in the 'Steeltoe.Management.Endpoint.Actuators.HttpExchanges.HttpExchangesEndpointOptions.RequestHeaders', the header name will be logged with a redacted value. Request headers can contain authentication tokens, or private information which may have regulatory concerns under GDPR and other laws. Arbitrary request headers should not be logged unless logs are secure and access controlled and the privacy impact assessed."
                },
                "IncludeResponseHeaders": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether headers from the HTTP response should be returned. Default value: true.\n\nIf a response header is not present in the 'Steeltoe.Management.Endpoint.Actuators.HttpExchanges.HttpExchangesEndpointOptions.ResponseHeaders', the header name will be logged with a redacted value."
                },
                "IncludeSessionId": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the user's session ID should be returned. Default value: false."
                },
                "IncludeTimeTaken": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the time taken to process the request should be returned. Default value: true."
                },
                "IncludeUserPrincipal": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the username of the 'System.Security.Claims.ClaimsPrincipal' should be returned. Default value: false."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequestHeaders": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets request header values that are allowed to be logged.\n\nIf a request header is not present in the 'Steeltoe.Management.Endpoint.Actuators.HttpExchanges.HttpExchangesEndpointOptions.RequestHeaders', the header name will be logged with a redacted value. Request headers can contain authentication tokens, or private information which may have regulatory concerns under GDPR and other laws. Arbitrary request headers should not be logged unless logs are secure and access controlled and the privacy impact assessed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                },
                "ResponseHeaders": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets response header values that are allowed to be logged.\n\nIf a response header is not present in the 'Steeltoe.Management.Endpoint.Actuators.HttpExchanges.HttpExchangesEndpointOptions.ResponseHeaders', the header name will be logged with a redacted value."
                },
                "Reverse": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to return HTTP exchanges in reverse order (newest exchanges first). Default value: true."
                }
              }
            },
            "Info": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "Loggers": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "Mappings": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "IncludeActuators": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to include actuator endpoints in the route mappings response. Default value: true."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "Path": {
              "type": "string",
              "description": "Gets or sets the HTTP request path at which management endpoints are exposed. Default value: /actuator."
            },
            "Port": {
              "type": "string",
              "description": "Gets or sets the alternate HTTP port at which management endpoints are exposed."
            },
            "Prometheus": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "Refresh": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                },
                "ReturnConfiguration": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to return the configuration after refreshing. Default value: true."
                }
              }
            },
            "SerializerOptions": {
              "type": "object",
              "properties": {
                "AllowOutOfOrderMetadataProperties": {
                  "type": "boolean",
                  "description": "Allows JSON metadata properties to be specified after regular properties in a deserialized JSON object."
                },
                "AllowTrailingCommas": {
                  "type": "boolean",
                  "description": "Get or sets a value that indicates whether an extra comma at the end of a list of JSON values in an object or array is allowed (and ignored) within the JSON payload being deserialized."
                },
                "DefaultBufferSize": {
                  "type": "integer",
                  "description": "Gets or sets the default buffer size, in bytes, to use when creating temporary buffers."
                },
                "DefaultIgnoreCondition": {
                  "enum": [
                    "Never",
                    "Always",
                    "WhenWritingDefault",
                    "WhenWritingNull"
                  ],
                  "description": "Gets or sets a value that determines when properties with default values are ignored during serialization or deserialization. The default value is 'System.Text.Json.Serialization.JsonIgnoreCondition.Never'."
                },
                "IgnoreReadOnlyFields": {
                  "type": "boolean",
                  "description": "Gets or sets a value that indicates whether read-only fields are ignored during serialization. A field is read-only if it is marked with the readonly keyword. The default value is false."
                },
                "IgnoreReadOnlyProperties": {
                  "type": "boolean",
                  "description": "Gets or sets a value that indicates whether read-only properties are ignored during serialization. The default value is false."
                },
                "IncludeFields": {
                  "type": "boolean",
                  "description": "Gets or sets a value that indicates whether fields are handled during serialization and deserialization. The default value is false."
                },
                "IndentCharacter": {
                  "type": "integer",
                  "description": "Defines the indentation character being used when 'System.Text.Json.JsonSerializerOptions.WriteIndented' is enabled. Defaults to the space character."
                },
                "IndentSize": {
                  "type": "integer",
                  "description": "Defines the indentation size being used when 'System.Text.Json.JsonSerializerOptions.WriteIndented' is enabled. Defaults to two."
                },
                "MaxDepth": {
                  "type": "integer",
                  "description": "Gets or sets the maximum depth allowed when serializing or deserializing JSON, with the default value of 0 indicating a maximum depth of 64."
                },
                "NewLine": {
                  "type": "string",
                  "description": "Gets or sets the new line string to use when 'System.Text.Json.JsonSerializerOptions.WriteIndented' is true.\n\nThe default is the value of 'System.Environment.NewLine'."
                },
                "NumberHandling": {
                  "enum": [
                    "Strict",
                    "AllowReadingFromString",
                    "WriteAsString",
                    "AllowNamedFloatingPointLiterals"
                  ],
                  "description": "Gets or sets an object that specifies how number types should be handled when serializing or deserializing."
                },
                "PreferredObjectCreationHandling": {
                  "enum": [
                    "Replace",
                    "Populate"
                  ],
                  "description": "Gets or sets the preferred object creation handling for properties when deserializing JSON."
                },
                "PropertyNameCaseInsensitive": {
                  "type": "boolean",
                  "description": "Gets or sets a value that indicates whether a property's name uses a case-insensitive comparison during deserialization. The default value is false."
                },
                "ReadCommentHandling": {
                  "enum": [
                    "Disallow",
                    "Skip",
                    "Allow"
                  ],
                  "description": "Gets or sets a value that defines how comments are handled during deserialization."
                },
                "RespectNullableAnnotations": {
                  "type": "boolean",
                  "description": "Gets or sets a value that indicates whether nullability annotations should be respected during serialization and deserialization."
                },
                "RespectRequiredConstructorParameters": {
                  "type": "boolean",
                  "description": "Gets or sets a value that indicates whether non-optional constructor parameters should be specified during deserialization."
                },
                "UnknownTypeHandling": {
                  "enum": [
                    "JsonElement",
                    "JsonNode"
                  ],
                  "description": "Gets or sets an object that specifies how deserializing a type declared as an 'System.Object' is handled during deserialization."
                },
                "UnmappedMemberHandling": {
                  "enum": [
                    "Skip",
                    "Disallow"
                  ],
                  "description": "Gets or sets an object that specifies how 'System.Text.Json.JsonSerializer' handles JSON properties that cannot be mapped to a specific .NET member when deserializing object types."
                },
                "WriteIndented": {
                  "type": "boolean",
                  "description": "Gets or sets a value that indicates whether JSON should use pretty printing. By default, JSON is serialized without any extra white space."
                }
              },
              "description": "Gets or sets the JSON serialization options."
            },
            "Services": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "SslEnabled": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether 'Steeltoe.Management.Endpoint.Configuration.ManagementOptions.Port' applies to HTTP or HTTPS requests. Default value: false."
            },
            "ThreadDump": {
              "type": "object",
              "properties": {
                "AllowedVerbs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Gets the list of HTTP verbs that are allowed for this endpoint."
                },
                "Duration": {
                  "type": "integer",
                  "description": "Gets or sets the duration (in milliseconds) before signaling to stop the capture. Default value: 10."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether this endpoint is enabled."
                },
                "Id": {
                  "type": "string",
                  "description": "Gets or sets the unique ID of this endpoint."
                },
                "Path": {
                  "type": "string",
                  "description": "Gets or sets the relative path at which this endpoint is exposed."
                },
                "RequiredPermissions": {
                  "enum": [
                    "None",
                    "Restricted",
                    "Full"
                  ],
                  "description": "Gets or sets the permissions required to access this endpoint, when running on Cloud Foundry. Default value: Restricted."
                }
              }
            },
            "UseStatusCodeFromResponse": {
              "type": "boolean",
              "description": "Gets or sets a value indicating whether the HTTP response status code is based on the health status. This setting can be overruled by sending an X-Use-Status-Code-From-Response HTTP header. Default value: true."
            },
            "Web": {
              "type": "object",
              "properties": {
                "Exposure": {
                  "type": "object",
                  "properties": {
                    "Exclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Gets the IDs of the actuators to exclude. Takes precedence over included entries."
                    },
                    "Include": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Gets the IDs of the actuators to include. Excluded entries take precedence."
                    }
                  },
                  "description": "Indicates which actuators are exposed."
                }
              }
            }
          },
          "description": "Provides configuration settings for management endpoints (actuators)."
        }
      }
    },
    "RunTask": {
      "type": "string",
      "description": "Gets or sets the name of the registered 'Steeltoe.Common.IApplicationTask' to run."
    },
    "Serilog": {
      "type": "object",
      "properties": {
        "MinimumLevel": {
          "type": "object",
          "properties": {
            "Default": {
              "enum": [
                "Verbose",
                "Debug",
                "Information",
                "Warning",
                "Error",
                "Fatal"
              ],
              "description": "Specifies the meaning and relative importance of a log event."
            },
            "Override": {
              "type": "object",
              "additionalProperties": {
                "enum": [
                  "Verbose",
                  "Debug",
                  "Information",
                  "Warning",
                  "Error",
                  "Fatal"
                ],
                "description": "Specifies the meaning and relative importance of a log event."
              }
            }
          },
          "description": "Gets or sets the minimum level for the root logger (and the \"Default\"). Limits the verbosity of all other overrides to this setting."
        }
      },
      "description": "Contains the subset of Serilog options that 'Steeltoe.Logging.DynamicSerilog.DynamicSerilogLoggerProvider' needs."
    },
    "Spring": {
      "type": "object",
      "properties": {
        "Application": {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Gets or sets the name of this application."
            }
          },
          "description": "Fallback configuration settings that describe this application."
        },
        "Boot": {
          "type": "object",
          "properties": {
            "Admin": {
              "type": "object",
              "properties": {
                "Client": {
                  "type": "object",
                  "properties": {
                    "ApplicationName": {
                      "type": "string",
                      "description": "Gets or sets the name to use for this application when registering with SBA."
                    },
                    "BasePath": {
                      "type": "string",
                      "description": "Gets or sets the base path SBA should use for interacting with your application."
                    },
                    "ConnectionTimeoutMs": {
                      "type": "integer",
                      "description": "Gets or sets the connection timeout (in milliseconds) for interactions with SBA. Default value: 100_000."
                    },
                    "Metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      },
                      "description": "Gets metadata to use when registering with SBA."
                    },
                    "Url": {
                      "type": "string"
                    },
                    "ValidateCertificates": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether SBA certificates should be validated. Default value: true."
                    }
                  }
                }
              }
            }
          }
        },
        "Cloud": {
          "type": "object",
          "properties": {
            "Config": {
              "type": "object",
              "properties": {
                "AccessTokenUri": {
                  "type": "string",
                  "description": "Gets or sets the address used by the provider to obtain a OAuth Access Token."
                },
                "ClientId": {
                  "type": "string",
                  "description": "Gets or sets the client ID used by the provider to obtain a OAuth Access Token."
                },
                "ClientSecret": {
                  "type": "string",
                  "description": "Gets or sets the client secret used by the provider to obtain a OAuth Access Token."
                },
                "DisableTokenRenewal": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether periodic HashiCorp Vault token renewal should occur. Default value: false."
                },
                "Discovery": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether the discovery-first feature is enabled. Default value: false."
                    },
                    "ServiceId": {
                      "type": "string",
                      "description": "Gets or sets the Service ID of the Config Server to use during discovery-first. Default value: \"configserver\"."
                    }
                  },
                  "description": "Gets service discovery settings."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the Config Server provider is enabled. Default value: true."
                },
                "Env": {
                  "type": "string",
                  "description": "Gets or sets the environment used when accessing configuration data. Default value: \"Production\"."
                },
                "FailFast": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether fail-fast behavior is enabled. Default value: false."
                },
                "Headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Gets headers that will be added to the Config Server request."
                },
                "Health": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether health checks are enabled. Default value: true."
                    },
                    "TimeToLive": {
                      "type": "integer",
                      "description": "Gets or sets the health check cache time-to-live (in milliseconds). Default value: 300_000 (5 minutes)."
                    }
                  },
                  "description": "Gets health check settings."
                },
                "Label": {
                  "type": "string",
                  "description": "Gets or sets a comma-delimited list of labels to request from the server."
                },
                "Name": {
                  "type": "string",
                  "description": "Gets or sets the application name used when accessing configuration data."
                },
                "Password": {
                  "type": "string",
                  "description": "Gets or sets the password used when accessing the Config Server."
                },
                "PollingInterval": {
                  "type": "string",
                  "pattern": "^-?(\\d{1,7}|((\\d{1,7}[\\.:])?(([01]?\\d|2[0-3]):[0-5]?\\d|([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d)(\\.\\d{1,7})?))$",
                  "description": "Gets or sets the frequency with which app should check Config Server for changes in configuration."
                },
                "Retry": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether retries are enabled on failures. Default value: false."
                    },
                    "InitialInterval": {
                      "type": "integer",
                      "description": "Gets or sets initial retry interval (in milliseconds). Default value: 1000."
                    },
                    "MaxAttempts": {
                      "type": "integer",
                      "description": "Gets or sets the max number of retries the client will attempt. Default value: 6."
                    },
                    "MaxInterval": {
                      "type": "integer",
                      "description": "Gets or sets max retry interval (in milliseconds). Default value: 2000."
                    },
                    "Multiplier": {
                      "type": [
                        "number",
                        "string"
                      ],
                      "description": "Gets or sets the multiplier for next retry interval. Default value: 1.1."
                    }
                  },
                  "description": "Gets retry settings."
                },
                "Timeout": {
                  "type": "integer",
                  "description": "Gets or sets the request timeout (in milliseconds). Default value: 60_000 (1 minute)."
                },
                "Token": {
                  "type": "string",
                  "description": "Gets or sets the HashiCorp Vault authentication token."
                },
                "TokenRenewRate": {
                  "type": "integer",
                  "description": "Gets or sets the vault token renew rate (in milliseconds). Default value: 60_000 (1 minute)."
                },
                "TokenTtl": {
                  "type": "integer",
                  "description": "Gets or sets the HashiCorp Vault token time-to-live (in milliseconds). Default value: 300_000 (5 minutes)."
                },
                "Uri": {
                  "type": "string",
                  "description": "Gets or sets a comma-delimited list of Config Server addresses. Default value: \"http://localhost:8888\"."
                },
                "Username": {
                  "type": "string",
                  "description": "Gets or sets the username used when accessing the Config Server."
                },
                "ValidateCertificates": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the provider validates server certificates. Default value: true."
                }
              },
              "description": "Holds settings used to configure the Spring Cloud Config Server provider."
            },
            "Discovery": {
              "type": "object",
              "properties": {
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to enable the Eureka client. Default value: true."
                },
                "RegistrationMethod": {
                  "type": "string",
                  "description": "Gets or sets how to register on Cloud Foundry. Can be \"route\", \"direct\", or \"hostname\"."
                }
              },
              "description": "Fallback configuration settings for Eureka."
            },
            "Inet": {
              "type": "object",
              "properties": {
                "DefaultHostname": {
                  "type": "string",
                  "description": "Gets or sets the default hostname. Default value: localhost."
                },
                "DefaultIPAddress": {
                  "type": "string",
                  "description": "Gets or sets the default IP address. Default value: 127.0.0.1."
                },
                "IgnoredInterfaces": {
                  "type": "string",
                  "description": "Gets or sets a comma-delimited list of network interfaces to ignore."
                },
                "PreferredNetworks": {
                  "type": "string",
                  "description": "Gets or sets a comma-delimited list of preferred networks."
                },
                "SkipReverseDnsLookup": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to skip reverse DNS lookups."
                },
                "UseOnlySiteLocalInterfaces": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether to use only site-local network interfaces."
                }
              },
              "description": "Provides settings for resolving network interfaces."
            }
          }
        }
      }
    },
    "Steeltoe": {
      "type": "object",
      "properties": {
        "Client": {
          "type": "object",
          "properties": {
            "CosmosDb": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "ConnectionString": {
                    "type": "string",
                    "description": "Gets or sets the connection string for this data source."
                  },
                  "Database": {
                    "type": "string",
                    "description": "Gets or sets the name of the CosmosDB database."
                  }
                },
                "description": "Provides configuration settings to connect to a data source."
              },
              "properties": {
                "Default": {
                  "type": "object",
                  "properties": {
                    "ConnectionString": {
                      "type": "string",
                      "description": "Gets or sets the connection string for this data source."
                    },
                    "Database": {
                      "type": "string",
                      "description": "Gets or sets the name of the CosmosDB database."
                    }
                  },
                  "description": "Provides configuration settings to connect to a data source."
                }
              }
            },
            "MongoDb": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "ConnectionString": {
                    "type": "string",
                    "description": "Gets or sets the connection string for this data source."
                  },
                  "Database": {
                    "type": "string",
                    "description": "Gets or sets the name of the MongoDB database."
                  }
                },
                "description": "Provides configuration settings to connect to a data source."
              },
              "properties": {
                "Default": {
                  "type": "object",
                  "properties": {
                    "ConnectionString": {
                      "type": "string",
                      "description": "Gets or sets the connection string for this data source."
                    },
                    "Database": {
                      "type": "string",
                      "description": "Gets or sets the name of the MongoDB database."
                    }
                  },
                  "description": "Provides configuration settings to connect to a data source."
                }
              }
            },
            "MySql": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "ConnectionString": {
                    "type": "string",
                    "description": "Gets or sets the connection string for this data source."
                  }
                },
                "description": "Provides configuration settings to connect to a data source."
              },
              "properties": {
                "Default": {
                  "type": "object",
                  "properties": {
                    "ConnectionString": {
                      "type": "string",
                      "description": "Gets or sets the connection string for this data source."
                    }
                  },
                  "description": "Provides configuration settings to connect to a data source."
                }
              }
            },
            "PostgreSql": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "ConnectionString": {
                    "type": "string",
                    "description": "Gets or sets the connection string for this data source."
                  }
                },
                "description": "Provides configuration settings to connect to a data source."
              },
              "properties": {
                "Default": {
                  "type": "object",
                  "properties": {
                    "ConnectionString": {
                      "type": "string",
                      "description": "Gets or sets the connection string for this data source."
                    }
                  },
                  "description": "Provides configuration settings to connect to a data source."
                }
              }
            },
            "RabbitMQ": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "ConnectionString": {
                    "type": "string",
                    "description": "Gets or sets the connection string for this data source."
                  }
                },
                "description": "Provides configuration settings to connect to a data source."
              },
              "properties": {
                "Default": {
                  "type": "object",
                  "properties": {
                    "ConnectionString": {
                      "type": "string",
                      "description": "Gets or sets the connection string for this data source."
                    }
                  },
                  "description": "Provides configuration settings to connect to a data source."
                }
              }
            },
            "Redis": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "ConnectionString": {
                    "type": "string",
                    "description": "Gets or sets the connection string for this data source."
                  }
                },
                "description": "Provides configuration settings to connect to a data source."
              },
              "properties": {
                "Default": {
                  "type": "object",
                  "properties": {
                    "ConnectionString": {
                      "type": "string",
                      "description": "Gets or sets the connection string for this data source."
                    }
                  },
                  "description": "Provides configuration settings to connect to a data source."
                }
              }
            },
            "SqlServer": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "ConnectionString": {
                    "type": "string",
                    "description": "Gets or sets the connection string for this data source."
                  }
                },
                "description": "Provides configuration settings to connect to a data source."
              },
              "properties": {
                "Default": {
                  "type": "object",
                  "properties": {
                    "ConnectionString": {
                      "type": "string",
                      "description": "Gets or sets the connection string for this data source."
                    }
                  },
                  "description": "Provides configuration settings to connect to a data source."
                }
              }
            }
          }
        }
      }
    }
  },
  "description": "Configuration settings for registered application tasks."
}