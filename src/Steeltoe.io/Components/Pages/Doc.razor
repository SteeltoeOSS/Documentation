@inject NavigationManager NavigationManager
@page "/doc"
@page "/docs"
@page "/{Component}/docs"
@page "/docs/{Component}"
@page "/docs/v{Version:int}"
@page "/docs/{Version:int}"
@page "/docs/{Version:int}/{Component}"
@page "/docs/{Version:int}x/{Component}"
@page "/docs/{Version:int}/{Component}/{Area}"

@code
{
    private const int CurrentVersion = 4;

    private readonly string[] _v3Components = ["circuitbreaker", "messaging", "stream"];

    [Parameter] public string Area { get; set; }
    [Parameter] public string Component { get; set; }
    [Parameter] public int? Version { get; set; }

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrEmpty(Component))
        {
            Component = Component.Replace("steeltoe-", string.Empty).Replace("introduction", "welcome");
        }

        if (_v3Components.Contains(Component))
        {
            Version = 3;
        }
        else if (Version is null or < 2 or > CurrentVersion)
        {
            Version = CurrentVersion;
        }


        Component ??= "welcome";
        var uri = $"/docs/v{Version}/{Component}/";

        Area ??= "index";
        uri += $"{Area}.html";

        NavigationManager.NavigateTo(uri);
    }
}
